name: Build and Push to Quay.io

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'fedora_image/**'
      - '.github/workflows/build-and-push.yml'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'fedora_image/**'
  workflow_dispatch:
  release:
    types: [published]

env:
  REGISTRY: quay.io
  STANDARD_IMAGE_NAME: jacobdschreuder/fedora-dev-container
  DEVSPACES_IMAGE_NAME: jacobdschreuder/fedora-devspaces-container

jobs:
  build-standard:
    name: Build Standard Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Extract metadata for standard image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.STANDARD_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push standard image
        uses: docker/build-push-action@v5
        with:
          context: ./fedora_image
          file: ./fedora_image/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=standard
          cache-to: type=gha,mode=max,scope=standard
          platforms: linux/amd64

      - name: Standard image digest
        run: echo "Standard image pushed with digest ${{ steps.build-and-push.outputs.digest }}"

  build-devspaces:
    name: Build DevSpaces Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Extract metadata for DevSpaces image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DEVSPACES_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push DevSpaces image
        uses: docker/build-push-action@v5
        with:
          context: ./fedora_image
          file: ./fedora_image/Dockerfile.openshift
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=devspaces
          cache-to: type=gha,mode=max,scope=devspaces
          platforms: linux/amd64

      - name: DevSpaces image digest
        run: echo "DevSpaces image pushed with digest ${{ steps.build-and-push.outputs.digest }}"

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-standard, build-devspaces]
    if: always()
    
    steps:
      - name: Check build status
        run: |
          echo "Build Summary:"
          echo "=============="
          echo "Standard Image: ${{ needs.build-standard.result }}"
          echo "DevSpaces Image: ${{ needs.build-devspaces.result }}"
          
          if [ "${{ needs.build-standard.result }}" = "success" ]; then
            echo "Standard image built successfully"
            echo "Image: ${{ env.REGISTRY }}/${{ env.STANDARD_IMAGE_NAME }}:latest"
          else
            echo "Standard image build failed"
          fi
          
          if [ "${{ needs.build-devspaces.result }}" = "success" ]; then
            echo "DevSpaces image built successfully"
            echo "Image: ${{ env.REGISTRY }}/${{ env.DEVSPACES_IMAGE_NAME }}:latest"
          else
            echo "DevSpaces image build failed"
          fi
